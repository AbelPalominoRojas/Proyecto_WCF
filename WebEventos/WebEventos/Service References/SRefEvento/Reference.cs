//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebEventos.SRefEvento {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Evento", Namespace="http://schemas.datacontract.org/2004/07/Sise.Entities")]
    [System.SerializableAttribute()]
    public partial class Evento : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebEventos.SRefEvento.AreaTematica AreaTematicaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodAreaTematicaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodEventoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionEventoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpositorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaEventoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FechaEventoStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimiteParticipantesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LugarEventoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LugaresDisponiblesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreEventoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebEventos.SRefEvento.AreaTematica AreaTematica {
            get {
                return this.AreaTematicaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaTematicaField, value) != true)) {
                    this.AreaTematicaField = value;
                    this.RaisePropertyChanged("AreaTematica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodAreaTematica {
            get {
                return this.CodAreaTematicaField;
            }
            set {
                if ((this.CodAreaTematicaField.Equals(value) != true)) {
                    this.CodAreaTematicaField = value;
                    this.RaisePropertyChanged("CodAreaTematica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodEvento {
            get {
                return this.CodEventoField;
            }
            set {
                if ((this.CodEventoField.Equals(value) != true)) {
                    this.CodEventoField = value;
                    this.RaisePropertyChanged("CodEvento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodUsuario {
            get {
                return this.CodUsuarioField;
            }
            set {
                if ((this.CodUsuarioField.Equals(value) != true)) {
                    this.CodUsuarioField = value;
                    this.RaisePropertyChanged("CodUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionEvento {
            get {
                return this.DescripcionEventoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionEventoField, value) != true)) {
                    this.DescripcionEventoField = value;
                    this.RaisePropertyChanged("DescripcionEvento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Expositor {
            get {
                return this.ExpositorField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpositorField, value) != true)) {
                    this.ExpositorField = value;
                    this.RaisePropertyChanged("Expositor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaEvento {
            get {
                return this.FechaEventoField;
            }
            set {
                if ((this.FechaEventoField.Equals(value) != true)) {
                    this.FechaEventoField = value;
                    this.RaisePropertyChanged("FechaEvento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FechaEventoString {
            get {
                return this.FechaEventoStringField;
            }
            set {
                if ((object.ReferenceEquals(this.FechaEventoStringField, value) != true)) {
                    this.FechaEventoStringField = value;
                    this.RaisePropertyChanged("FechaEventoString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimiteParticipantes {
            get {
                return this.LimiteParticipantesField;
            }
            set {
                if ((this.LimiteParticipantesField.Equals(value) != true)) {
                    this.LimiteParticipantesField = value;
                    this.RaisePropertyChanged("LimiteParticipantes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LugarEvento {
            get {
                return this.LugarEventoField;
            }
            set {
                if ((object.ReferenceEquals(this.LugarEventoField, value) != true)) {
                    this.LugarEventoField = value;
                    this.RaisePropertyChanged("LugarEvento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LugaresDisponibles {
            get {
                return this.LugaresDisponiblesField;
            }
            set {
                if ((this.LugaresDisponiblesField.Equals(value) != true)) {
                    this.LugaresDisponiblesField = value;
                    this.RaisePropertyChanged("LugaresDisponibles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreEvento {
            get {
                return this.NombreEventoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreEventoField, value) != true)) {
                    this.NombreEventoField = value;
                    this.RaisePropertyChanged("NombreEvento");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaTematica", Namespace="http://schemas.datacontract.org/2004/07/Sise.Entities")]
    [System.SerializableAttribute()]
    public partial class AreaTematica : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodAreaTematicaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreAreaTematicaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodAreaTematica {
            get {
                return this.CodAreaTematicaField;
            }
            set {
                if ((this.CodAreaTematicaField.Equals(value) != true)) {
                    this.CodAreaTematicaField = value;
                    this.RaisePropertyChanged("CodAreaTematica");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreAreaTematica {
            get {
                return this.NombreAreaTematicaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreAreaTematicaField, value) != true)) {
                    this.NombreAreaTematicaField = value;
                    this.RaisePropertyChanged("NombreAreaTematica");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/Sise.WcfService.Entity")]
    [System.SerializableAttribute()]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDevField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDev {
            get {
                return this.MessageDevField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDevField, value) != true)) {
                    this.MessageDevField = value;
                    this.RaisePropertyChanged("MessageDev");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRefEvento.IEventoService")]
    public interface IEventoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/registrar", ReplyAction="http://tempuri.org/IEventoService/registrarResponse")]
        WebEventos.SRefEvento.ServiceResponse registrar(WebEventos.SRefEvento.Evento evento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/registrar", ReplyAction="http://tempuri.org/IEventoService/registrarResponse")]
        System.Threading.Tasks.Task<WebEventos.SRefEvento.ServiceResponse> registrarAsync(WebEventos.SRefEvento.Evento evento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/actualizar", ReplyAction="http://tempuri.org/IEventoService/actualizarResponse")]
        WebEventos.SRefEvento.ServiceResponse actualizar(WebEventos.SRefEvento.Evento evento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/actualizar", ReplyAction="http://tempuri.org/IEventoService/actualizarResponse")]
        System.Threading.Tasks.Task<WebEventos.SRefEvento.ServiceResponse> actualizarAsync(WebEventos.SRefEvento.Evento evento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/eliminar", ReplyAction="http://tempuri.org/IEventoService/eliminarResponse")]
        WebEventos.SRefEvento.ServiceResponse eliminar(int CodEvento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/eliminar", ReplyAction="http://tempuri.org/IEventoService/eliminarResponse")]
        System.Threading.Tasks.Task<WebEventos.SRefEvento.ServiceResponse> eliminarAsync(int CodEvento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/listar", ReplyAction="http://tempuri.org/IEventoService/listarResponse")]
        WebEventos.SRefEvento.Evento[] listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/listar", ReplyAction="http://tempuri.org/IEventoService/listarResponse")]
        System.Threading.Tasks.Task<WebEventos.SRefEvento.Evento[]> listarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/buscar", ReplyAction="http://tempuri.org/IEventoService/buscarResponse")]
        WebEventos.SRefEvento.Evento buscar(int CodEvento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/buscar", ReplyAction="http://tempuri.org/IEventoService/buscarResponse")]
        System.Threading.Tasks.Task<WebEventos.SRefEvento.Evento> buscarAsync(int CodEvento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/buscarLista", ReplyAction="http://tempuri.org/IEventoService/buscarListaResponse")]
        WebEventos.SRefEvento.Evento[] buscarLista(int codAreaTematica, System.Nullable<System.DateTime> fechaDesde, System.Nullable<System.DateTime> fechaHasta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventoService/buscarLista", ReplyAction="http://tempuri.org/IEventoService/buscarListaResponse")]
        System.Threading.Tasks.Task<WebEventos.SRefEvento.Evento[]> buscarListaAsync(int codAreaTematica, System.Nullable<System.DateTime> fechaDesde, System.Nullable<System.DateTime> fechaHasta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventoServiceChannel : WebEventos.SRefEvento.IEventoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventoServiceClient : System.ServiceModel.ClientBase<WebEventos.SRefEvento.IEventoService>, WebEventos.SRefEvento.IEventoService {
        
        public EventoServiceClient() {
        }
        
        public EventoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebEventos.SRefEvento.ServiceResponse registrar(WebEventos.SRefEvento.Evento evento) {
            return base.Channel.registrar(evento);
        }
        
        public System.Threading.Tasks.Task<WebEventos.SRefEvento.ServiceResponse> registrarAsync(WebEventos.SRefEvento.Evento evento) {
            return base.Channel.registrarAsync(evento);
        }
        
        public WebEventos.SRefEvento.ServiceResponse actualizar(WebEventos.SRefEvento.Evento evento) {
            return base.Channel.actualizar(evento);
        }
        
        public System.Threading.Tasks.Task<WebEventos.SRefEvento.ServiceResponse> actualizarAsync(WebEventos.SRefEvento.Evento evento) {
            return base.Channel.actualizarAsync(evento);
        }
        
        public WebEventos.SRefEvento.ServiceResponse eliminar(int CodEvento) {
            return base.Channel.eliminar(CodEvento);
        }
        
        public System.Threading.Tasks.Task<WebEventos.SRefEvento.ServiceResponse> eliminarAsync(int CodEvento) {
            return base.Channel.eliminarAsync(CodEvento);
        }
        
        public WebEventos.SRefEvento.Evento[] listar() {
            return base.Channel.listar();
        }
        
        public System.Threading.Tasks.Task<WebEventos.SRefEvento.Evento[]> listarAsync() {
            return base.Channel.listarAsync();
        }
        
        public WebEventos.SRefEvento.Evento buscar(int CodEvento) {
            return base.Channel.buscar(CodEvento);
        }
        
        public System.Threading.Tasks.Task<WebEventos.SRefEvento.Evento> buscarAsync(int CodEvento) {
            return base.Channel.buscarAsync(CodEvento);
        }
        
        public WebEventos.SRefEvento.Evento[] buscarLista(int codAreaTematica, System.Nullable<System.DateTime> fechaDesde, System.Nullable<System.DateTime> fechaHasta) {
            return base.Channel.buscarLista(codAreaTematica, fechaDesde, fechaHasta);
        }
        
        public System.Threading.Tasks.Task<WebEventos.SRefEvento.Evento[]> buscarListaAsync(int codAreaTematica, System.Nullable<System.DateTime> fechaDesde, System.Nullable<System.DateTime> fechaHasta) {
            return base.Channel.buscarListaAsync(codAreaTematica, fechaDesde, fechaHasta);
        }
    }
}
